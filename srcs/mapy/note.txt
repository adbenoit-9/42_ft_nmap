


This one use imbriqued array of struct from the top

It's tricky because it's not more nmap that use mappy but mappy that need the struct of nmap
at compile time.
We can avoid too much dependdency with define.

/*
** #define mapy_index(root, index) do{\
** 		index = (((i * root->st_nb) * (j * root->nd_nb) * (k * root->rd_nb) + \
** 												(j * root->nd_nb) * (k * root->rd_nb) + \
** 												k) % BLCK_NB) * MAP_BLCK_SIZE;  \
** } while (0)\
** 
** #define mapy_size(root, index) do{\
** 		index = (((i * root->st_nb) * (j * root->nd_nb) * (k * root->rd_nb) + \
** 												(j * root->nd_nb) * (k * root->rd_nb) + \
** 												k) % BLCK_NB) * MAP_BLCK_SIZE;  \
** } while (0)\
** 
** #define mapy_exec(root, task, hook) do{ \
** 		r = (*_exec[task] \
** 								[hook]) \
** 								(&(root->map)[index + sizeof(map_id)], \
** 								(T_CLIENT_ROOT*)&root->client, \
** 								(T_CLIENT_ST*)&root->st->client, \
** 								(T_CLIENT_ND*)&root->nd->client,  \
** 								(T_CLIENT_RD*)&root->rd->exe.client); \
** } while (0)\
** 
** #define mapy_ff(root) do { \
** r = mapy_ff(root, &root->st[i], &root->st[i].nd[j], &root->st[i].nd[j].rd[k], k);\
** } while (0)
*/
